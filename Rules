#!/usr/bin/env ruby

require 'json'
require 'date'
require 'compass'

Compass.add_project_configuration 'config.rb'

## preprocessing
preprocess do
  @items.each do |item|
    if item.key?(:speakers)
      schedule_items = item[:speakers]
      jsonnew_schedule_items = schedule_items
      File.open("content/vdb16all.json","w") do |f|
        # f.write(schedule_items.to_json)
        f.puts jsonnew_schedule_items.to_json.force_encoding("UTF-8")
      end
      schedule_items.each do |speaker|
        speakername = speaker[:firstname].to_s+' '+speaker[:lastname].to_s
        if speaker[:pageurl]
          @items.create('', {:photo => speaker[:photo], :firstname => speaker[:firstname], :lastname => speaker[:lastname], :url => speaker[:url], :company => speaker[:company], :test => speaker[:test], :talk => speaker[:talk], :tags => speaker[:tags], :layout => '/speaker_page.html'}, '/speakers/'+speaker[:pageurl]+'/index.md')
           speaker[:talk].each do |t|
             @items.create('', {:title => t[:title], :speaker => speakername, :speakerpage => speaker[:pageurl], :personalurl => speaker[:url], :company => speaker[:company], :photo => speaker[:photo], :tags => speaker[:tags], :type => t[:type], :short => t[:short], :long => t[:long], :day => t[:day], :track => t[:track], :slot => t[:slot], :duration => t[:duration], :venue => t[:venue], :test => t[:test], :layout => '/talk_page.html'}, '/talk/'+t[:tid].to_s+'/index.md')
           end
        end
      end
    end
  end
end

ignore '_*.scss'

## PHP

route "/**/*.mkd" do
  @item.identifier.without_ext + ".php"
end

## javascript

compile '/js/**/*' do
end

## CSS

compile '/css/**/*.scss' do
  filter :sass, Compass.sass_engine_options.merge(
    :syntax => :scss,
    :style => :compressed
  )
end

route '/css/**/_*' do
  nil
end

route '/css/**/*.scss' do
  @item.identifier.without_ext + ".css"
end

compile '/css/**/*.css' do
  filter :minify
end

route '/css/**/*.css' do
  item.identifier.to_s
end

## BLOG

route '/blog/**/*.md' do
  if @item.identifier.without_ext != '/blog/index'
    blogdate = Time.parse(item[:created_at]).strftime("%d-%m-%Y")
    blogtitle = item[:title].downcase.strip.gsub(' ', '-').gsub(/[^\w-]/, '')
    '/blog/'+ blogdate + '-' + blogtitle + "/index.html"
  else
    item.identifier.without_ext + '.html'
  end
end

compile '/blog/**/*.md' do
  filter :erb
  filter :kramdown
  filter :md_links
  # read layout from items
  if item[:layout] != nil
    layout item[:layout]
  else
    layout '/default.html'
  end

end

compile '/speakers/**/*.md' do
  layout item[:layout]
  item.identifier.without_ext + '.html'
end

## htaccess

compile '/htaccess.txt' do
  filter :erb
end
route '/htaccess.txt' do
  '/.htaccess'
end


## defaults

compile '/**/*.md' do
  filter :erb
  filter :kramdown, {
    :smart_quotes => "apos,apos,quot,quot",
    :coderay_line_numbers => nil,
    :coderay_tab_width => 4,
    :coderay_wrap => :div,
    :coderay_css => :class
  }

  # read layout from items
  if item[:layout] != nil
    layout item[:layout]
  else
    layout '/default.html'
  end

  filter :md_links
  #filter :relativize_paths, :type => :html
  #filter :htmlcompressor
end

compile '/**/*' do
end

route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    item.identifier.without_ext + '.html'
  end
end

route '/**/*' do
  item.identifier.to_s
end

## Layout rule

layout '/**/*', :erb
