#!/usr/bin/env ruby

require 'json'
require 'date'
require 'compass'

Compass.add_project_configuration 'config.rb'

## preprocessing
preprocess do
  @items.each do |item|
    if item.key?(:scheduledata)

      json_speakers = item[:speakers]
      File.open("content/vdb16speakers.json","w") do |f|
        f.puts json_speakers.to_json.force_encoding("UTF-8")
      end

      json_talks = item[:talks]
      File.open("content/vdb16talks.json","w") do |f|
        f.puts json_speakers.to_json.force_encoding("UTF-8")
      end

      schedule_speakers = item[:speakers]
      schedule_talks = item[:talks]

      schedule_talks.each do |talk|
        if !talk[:tid].to_s.empty?
          speakers = []
          if talk[:sid].kind_of?(Array)
            talk[:sid].each do |t|
              speaker = schedule_speakers.select{ |item| item[:sid] == t.to_i }
              speakers << speaker
            end
          else
            speaker = schedule_speakers.select{ |item| item[:sid] == talk[:sid] }
            speakers << speaker
          end
          @items.create('', {:title => talk[:title], :talkspeakers => speakers, :type => talk[:type], :short => talk[:short], :long => talk[:long], :day => talk[:day], :track => talk[:track], :slot => talk[:slot], :duration => talk[:duration], :form => talk[:form], :venue => talk[:venue], :layout => '/talk_page.html'}, '/talk/'+talk[:tid].to_s+'/index.md')
        end
      end

      schedule_speakers.each do |speaker|
        if !speaker[:sid].to_s.empty?
          talks = []
          if speaker[:talk].kind_of?(Array)
            speaker[:talk].each do |s|
              talk = schedule_talks.select{ |item| item[:tid] == s.to_i }
              talks << talk
            end
          else
            talk = schedule_talks.select{ |item| item[:tid] == speaker[:talk].to_i }
            talks << talk
          end
          @items.create('', {:photo => speaker[:photo], :firstname => speaker[:firstname], :lastname => speaker[:lastname], :url => speaker[:url], :company => speaker[:company], :speakertalks => talks, :tags => speaker[:tags], :answers => speaker[:answers], :layout => '/speaker_page.html'}, '/speakers/'+speaker[:pageurl]+'/index.md')
        end
      end

    end
  end
end

ignore '_*.scss'

## PHP

route "/**/*.mkd" do
  @item.identifier.without_ext + ".php"
end

## javascript

compile '/js/**/*' do
end

## CSS

compile '/css/**/*.scss' do
  filter :sass, Compass.sass_engine_options.merge(
    :syntax => :scss,
    :style => :compressed
  )
end

route '/css/**/_*' do
  nil
end

route '/css/**/*.scss' do
  @item.identifier.without_ext + ".css"
end

compile '/css/**/*.css' do
  filter :minify
end

route '/css/**/*.css' do
  item.identifier.to_s
end

## BLOG

route '/blog/**/*.md' do
  if @item.identifier.without_ext != '/blog/index'
    blogdate = Time.parse(item[:created_at]).strftime("%d-%m-%Y")
    blogtitle = item[:title].downcase.strip.gsub(' ', '-').gsub(/[^\w-]/, '')
    '/blog/'+ blogdate + '-' + blogtitle + "/index.html"
  else
    item.identifier.without_ext + '.html'
  end
end

compile '/blog/**/*.md' do
  filter :erb
  filter :kramdown
  filter :md_links
  # read layout from items
  if item[:layout] != nil
    layout item[:layout]
  else
    layout '/default.html'
  end

end

compile '/speakers/**/*.md' do
  layout item[:layout]
  item.identifier.without_ext + '.html'
end

## htaccess

compile '/htaccess.txt' do
  filter :erb
end
route '/htaccess.txt' do
  '/.htaccess'
end


## defaults

compile '/**/*.md' do
  filter :erb
  filter :kramdown, {
    :smart_quotes => "apos,apos,quot,quot",
    :coderay_line_numbers => nil,
    :coderay_tab_width => 4,
    :coderay_wrap => :div,
    :coderay_css => :class
  }

  # read layout from items
  if item[:layout] != nil
    layout item[:layout]
  else
    layout '/default.html'
  end

  filter :md_links
  #filter :relativize_paths, :type => :html
  #filter :htmlcompressor
end

compile '/**/*' do
end

route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    item.identifier.without_ext + '.html'
  end
end

route '/**/*' do
  item.identifier.to_s
end

## Layout rule

layout '/**/*', :erb
